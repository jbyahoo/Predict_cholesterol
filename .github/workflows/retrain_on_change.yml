name: Preproc data and train model

on: 
  push:
    branches:
      - main
    paths:  
      - 'data/raw/train_cholesterol.xlsx'
      - 'data/processed/train_choloesterol.xlsx'
      - 'ARISA_DSML/preproc.py'
      - 'ARISA_DSML/train.py'
      - 'models/best_params.pkl'
  workflow_dispatch:

jobs:
  preprocess:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Dodano dla OIDC
      contents: read
      
    env:
      AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
      AZURE_STORAGE_CONTAINER: ${{ secrets.AZURE_STORAGE_CONTAINER }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with: 
          python-version: "3.11"
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl gnupg coreutils unixodbc-dev

      - name: Configure ODBC Driver
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor -o /usr/share/keyrings/microsoft.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/ubuntu/22.04/prod jammy main" | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18
          echo "export PATH=\$PATH:/opt/mssql-tools18/bin" | sudo tee -a /etc/profile
          source /etc/profile

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow==2.13.1 pyodbc==4.0.39 azure-storage-blob==12.19.1
          pip install loguru kaggle dotenv openpyxl catboost optuna azure-identity azure-storage-blob nannyml traitlets IPython ipywidgets

      - name: Azure login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Verify Azure login
        run: az account show

      - name: Create kaggle directory
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"$KAGGLE_USERNAME\",\"key\":\"$KAGGLE_KEY\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Run preprocessing
        run: make preprocess

      - name: Upload preprocessed data
        uses: actions/upload-artifact@v4
        with:
          name: processed-data
          path: data/processed

  train:
    runs-on: ubuntu-latest
    needs: preprocess
    permissions:
      id-token: write  # Dodano dla OIDC
      contents: write
      actions: write
    
    env:
      AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
      AZURE_STORAGE_CONTAINER: ${{ secrets.AZURE_STORAGE_CONTAINER }}
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}

    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download processed data
        uses: actions/download-artifact@v4
        with:
          name: processed-data
          path: data/processed

      - name: Set up Python
        uses: actions/setup-python@v4
        with: 
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          pip install mlflow==2.13.1 azure-storage-blob==12.19.1
          pip install loguru kaggle dotenv openpyxl catboost optuna azure-identity azure-storage-blob nannyml traitlets IPython ipywidgets

      - name: Run training
        run: |
          mlflow server --host 0.0.0.0 --port 5000 &
          sleep 5  # Czekaj na inicjalizacjÄ™ serwera
          make train

      - name: Upload trained model
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: models/

      - name: Trigger Predict Workflow
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/predict_on_model_change.yml/dispatches \
          -d '{"ref":"main"}'
